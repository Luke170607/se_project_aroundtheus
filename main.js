!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._imageDeleteButton.addEventListener("click",(()=>this._handleDeleteButton())),this._likeButton.addEventListener("click",(()=>this._handleLikeButton())),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this._cardImageElement)}))}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardImageElement.alt=this._name,this._cardImageElement.src=this._link,this._cardTitleElement.textContent=this._name,this._imageDeleteButton=this._cardElement.querySelector(".card__delete-button"),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);this._formElement.querySelector(`#${e.id}-redline`).classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);this._formElement.querySelector(`#${e.id}-redline`).classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(e,t){this._hasInvalidInput(e)?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_setSubmitListener(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()}))}_setEventListeners(){this._setSubmitListener(),this._inputElements.forEach((e=>{this._hideInputError(e),e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputElements,this._submitButton)}))}))}resetValidation(){this._toggleButtonState(this._inputElements,this._submitButton),this._inputElements.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".popup__close")}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._closeOnRemoteClick)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._closeOnRemoteClick)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_closeOnRemoteClick=e=>{e.target===e.currentTarget&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".popup__form"),this._handleFormSubmit=t}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e=this._popupForm.querySelectorAll(".popup__input"),t={};return e.forEach((e=>t[e.name]=e.value)),t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const o=document.querySelector(".profile__edit-button"),r=document.querySelector("#edit-popup"),i=(r.querySelector(".popup__close"),document.querySelector(".popup__name")),l=document.querySelector(".popup__title"),a=(document.querySelector(".profile__name"),document.querySelector(".profile__title"),document.querySelector("#add-popup")),c=document.querySelector(".profile__add-button"),u=(document.querySelector(".modal__close"),document.querySelector("#popup-image").querySelector(".modal__close"),document.querySelector(".cards__list"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__text-underline-red",errorClass:"popup__error_visible"}),p=r.querySelector(".popup__form"),_=new n("#add-popup",(function(e){v(e),_.close()}));_.setEventListeners();const m=new n("#edit-popup",(function(e){E.setUserInfo(e),m.close()}));m.setEventListeners();const d=new t(u,p);d.enableValidation();const h=new t(u,a.querySelector(".popup__form"));h.enableValidation();const E=new class{constructor(e,t){this._name=document.querySelector(e),this._about=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._about.textContent=s}}(".profile__name",".profile__title");function S(e){const t={link:e.src,name:e.alt};g.open(t)}o.addEventListener("click",(()=>{const e=E.getUserInfo();i.value=e.name,l.value=e.about,d.resetValidation(),m.open()})),c.addEventListener("click",(()=>{h.resetValidation(),_.open()}));const g=new class extends s{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector(".popup__image-preview"),this._imageCaption=this._popupElement.querySelector(".popup__image-caption")}open(e){this._imageElement.src=e.link,this._imageElement.alt=e.name,this._imageCaption.textContent=e.name,super.open()}}("#popup-image");function v(t){const s=new e(t,"#card-template",S).getView();y.addItem(s)}g.setEventListeners();const y=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderer=n,this._items=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:v},".cards__list");y.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,